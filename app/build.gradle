apply plugin: 'com.android.application'

android {
    dataBinding {
        enabled = true
    }

    // URLS
    def PRODUCTION_ENV_BASE_URL = "\"https://data.cityofnewyork.us/resource/\""
    def TEST_ENV_BASE_URL = "\"https://data.cityofnewyork.us/resource/\""
    def DEVELOPMENT_ENV_BASE_URL = "\"https://data.cityofnewyork.us/resource/\""

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.nyc.schools"
        minSdkVersion 21
        targetSdkVersion 28
        multiDexEnabled true
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        test.resources.srcDirs += 'src/main/'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }


    buildTypes {

        def STRING = "String"

        def PROD_BASE_URL = "PROD_BASE_URL"
        def TEST_BASE_URL = "TEST_BASE_URL"
        def DEV_BASE_URL = "DEV_BASE_URL"

        release {

            buildConfigField STRING, PROD_BASE_URL, PRODUCTION_ENV_BASE_URL
            buildConfigField STRING, TEST_BASE_URL, TEST_ENV_BASE_URL
            buildConfigField STRING, DEV_BASE_URL, DEVELOPMENT_ENV_BASE_URL

            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {

            buildConfigField STRING, PROD_BASE_URL, PRODUCTION_ENV_BASE_URL
            buildConfigField STRING, TEST_BASE_URL, TEST_ENV_BASE_URL
            buildConfigField STRING, DEV_BASE_URL, DEVELOPMENT_ENV_BASE_URL

            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false

            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        developer {

            buildConfigField STRING, PROD_BASE_URL, PRODUCTION_ENV_BASE_URL
            buildConfigField STRING, TEST_BASE_URL, TEST_ENV_BASE_URL
            buildConfigField STRING, DEV_BASE_URL, DEVELOPMENT_ENV_BASE_URL

            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false

            debuggable true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Compatibility and UI
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // MultiDex support
    implementation 'com.android.support:multidex:1.0.3'

    // LiveData with view models
    implementation "android.arch.lifecycle:extensions:1.1.1"
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"

    // HTTP calls using Retrofit and OKHttp
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.retrofit2:retrofit-mock:2.3.0'
    implementation 'com.google.code.gson:gson:2.8.2'

    implementation 'com.squareup.picasso:picasso:2.1.5'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    implementation 'org.apache.commons:commons-collections4:4.0'

    // Event Bus - Square
    implementation 'com.squareup:otto:1.3.8'

    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
}
